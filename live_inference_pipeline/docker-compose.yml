version: '3.8'

# Load environment variables from .env file
# Make sure to create .env from .env.example before running

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: # <-- ADD THIS BLOCK
      - default
      - shared_network

  ollama:
    build: ./ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_data:/root/.ollama
    healthcheck:
        test: ["CMD", "ollama", "ps"]
        interval: 10s
        timeout: 5s
        retries: 5

  pii-filter:
    build: ./PII
    container_name: pii-filter
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1

  rag-core:
    build: ./RAG-Core
    container_name: rag-core
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - default
      - shared_network

  llm-connector:
    build: ./LLM-Connector
    container_name: llm-connector
    depends_on:
      rabbitmq:
        condition: service_healthy
      ollama:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
  
  psql-worker:
    build: ./psql_worker # Directory where your Dockerfile and code live
    container_name: psql_worker
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be ready
    environment:
      - PYTHONUNBUFFERED=1
      # DB Connection details - 'postgres' is the service name on the shared network
      - DB_HOST=${DB_HOST:-postgres}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-consumer_rights}
      # RabbitMQ Connection details
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE:-CUD_queue}
    networks:
      - default
      - shared_network

networks:
  default:
  shared_network:
    external: true